<link rel="import" href="./global.pc" />
<link rel="import" href="./gutter.pc" />
<link rel="import" href="./tooltip.pc" />
<link rel="import" href="./color-picker.pc" />

<component id="td-css-color-expr-input">
  <meta name="internal" content="true" />
  <style>
    .input-box {
      width: var(--base4);
      height: var(--base4);
      margin-right: var(--base2);
      position: relative;
      top: 1px;
      display: inline-block;
      border-radius: 2px;
      border: 1px solid rgba(0,0,0,0.3);
    }
  </style>
  <template>
    <td-color-mini-input value=[[bind value]] />
    <span>[[bind value]]</span>
  </template>
</component>

<component id="td-css-keyword-expr-input">
  <style>
    :host {
      color: var(--font-color-alt);
    }
  </style>
  <template>
    <span>[[bind name]]</span>
  </template>
</component>

<component id="td-css-string-expr-input">
  <style>
    :host {
      color: var(--font-color-alt);
    }
    .value::before {
      content: "\"";
    }
    .value::after {
      content: "\"";
    }
  </style>
  <template>
    <span class="value">[[bind value]]</span>
  </template>
</component>

<component id="td-css-spaced-list-expr-input">
  <meta name="internal" content="true" />
  <style>
    td-css-expr-input::after {
      content: " ";
    }
    td-css-expr-input:last-child::after {
      content: "";
    }
  </style>
  <template>
    <td-css-expr-input [[repeat items as item]] value=[[bind item]] />
  </template>
</component>

<component id="td-css-comma-list-expr-input">
  <meta name="internal" content="true" />
  <style>
    td-css-expr-input::after {
      content: ", ";
    }
    td-css-expr-input:last-child::after {
      content: " ";
    }
  </style>
  <template>
    <td-css-expr-input [[repeat items as item, j]] value=[[bind item]] key=[[bind j]] />
  </template>
</component>

<component id="td-css-number-expr-input">
  <meta name="internal" content="true" />
  <style>
    .input-box {
      width: var(--base4);
      height: var(--base4);
      margin-right: var(--base2);
      position: relative;
      top: 1px;
      display: inline-block;
      border-radius: 2px;
      border: 1px solid rgba(0,0,0,0.3);
    }
  </style>
  <template>
    <span>[[bind value]]</span>
  </template>
</component>

<component id="td-color-mini-input">
  <style>
    .input-box {
      width: var(--base4);
      height: var(--base4);
      margin-right: var(--base2);
      position: relative;
      top: 1px;
      display: inline-block;
      border-radius: 2px;
      border: 1px solid rgba(0,0,0,0.3);
    }
  </style>
  <template>
    <td-tooltip>
      <div slot="button" class="input-box" style=[[bind { background: value }]] /> 

      <!-- TODO - fix me - super slow -->
      <!-- need to not render this until slot is present -->
      <td-color-picker color=[[bind value]] />
    </td-tooltip>
  </template>
</component>

<component id="td-css-measurement-input">
  <meta name="internal" content="true" />
  <style>
    .value {
      
    }
    .unit {
      color: var(--font-color-alt);
    }
  </style>
  <template>
    <span class="color">[[bind value]]</span>
    <span class="unit">[[bind unit]]</span>
  </template>
</component>

<component id="td-css-call-expr-input">
  <meta name="internal" content="true" />
  <style>
    td-css-expr-input::after {
      content: ", ";
    }

    td-css-expr-input:last-of-type::after {
      content: ")";
      color: var(--font-color-alt);
    }

    .name {
      color: var(--font-color-alt);
    }

    .name::after {
      content: "(";
    }
  </style>
  <template>
    <td-color-mini-input [[if returnType && returnType === "COLOR"]] value=[[bind returnValue]] /> 
    <span class="name">[[bind name]]</span>
    <td-css-expr-input [[repeat params as param]] value=[[bind param]] />
  </template>
</component>

<component id="td-css-expr-input">
  <style>
    :host {
      display: inline;
    }
  </style>
  <template>
    <td-css-call-expr-input [[if value.type === "CALL"]] [[bind value]] />
    <td-css-color-expr-input [[elseif value.type === "COLOR"]] [[bind value]] />
    <td-css-measurement-input [[elseif value.type === "MEASUREMENT"]] [[bind value]] />
    <td-css-number-expr-input [[elseif value.type === "NUMBER"]] [[bind value]] />
    <td-css-keyword-expr-input [[elseif value.type === "KEYWORD"]] [[bind value]] />
    <td-css-string-expr-input [[elseif value.type === "STRING"]] [[bind value]] />
    <td-css-spaced-list-expr-input [[elseif value.type === "SPACED_LIST"]] [[bind value]] />
    <td-css-comma-list-expr-input [[elseif value.type === "COMMA_LIST"]] [[bind value]] />
    <span [[else]]>
      [[bind value]]
    </span>
  </template>
  <preview name="main" width="50" height="30">
    <td-css-expr-input value=[[bind {
      type: "COLOR",
      value: "#F60"
    }]] />
  </preview>
</component>
