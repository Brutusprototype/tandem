#!/usr/bin/env node
const path = require("path");
const fs = require("fs");
const fsa = require("fs-extra");
let filePath = process.argv[2];
const {_,write,definition,out: outRelPath} = require("yargs").argv;
const glob = require("glob");
const {difference} = require("lodash");
const { translatePaperclipModuleToReact, translatePaperclipModuleToReactTSDefinition } = require("..");
const migrate = require("paperclip-migrator");
const { openPCConfig, loadFSDependencyGraphSync } = require("paperclip");
const { addProtocol, FILE_PROTOCOL } = require("tandem-common");

// const relPath = process.argv.slice(2)[0];
// const cwd = process.cwd();

const filePaths = glob.sync(_[0]);
const cwd = process.cwd();
const outAbsPath = outRelPath && (outRelPath.charAt(0) === "/" ? outRelPath : path.join(cwd, outRelPath));

for (const relPath of filePaths) {

  const absPath = relPath.charAt(0) === "/" ? relPath : path.join(cwd, relPath);
  try {
    const absUri = addProtocol(FILE_PROTOCOL, absPath);
    const { config, directory } = openPCConfig(path.dirname(absPath));
    const graph = loadFSDependencyGraphSync(config, directory, migrate);
    const entry = graph[absUri];

    let content;
    let contentFilePath;

    if (definition) {
      content = translatePaperclipModuleToReactTSDefinition(entry, graph);
      contentFilePath = absPath.replace(/\.pc$/, ".d.ts");
    } else {
      content = translatePaperclipModuleToReact(entry, graph);
      contentFilePath = absPath.replace(/\.pc$/, ".js");
    }

    if (outAbsPath) {
      contentFilePath = path.join(
        outAbsPath,
        difference(contentFilePath.split("/"), outAbsPath.split("/")).slice(1).join("/"),
      );


    }

    if (write) {
      // fs.writeFileSync(contentFilePath, content);
      console.log(`wrote ${contentFilePath}`);
    } else {
      console.log(content);
    }
  } catch(e) {
    console.error(e);
  }
}
  



// for (const relativePath of filePaths) {


//   try {
//     const newModule = migrate(JSON.parse(fs.readFileSync(relativePath, "utf8")));
//     const moduleJSON = JSON.stringify(newModule, null, 2);
//     if (write) {
//       fs.writeFileSync(relativePath, moduleJSON);
//       console.log(`migrated ${relativePath}`);
//     } else {
//       console.log(moduleJSON);
//     }
//   } catch(e) {
//   }
// }

